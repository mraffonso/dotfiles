#!/bin/sh

display_usage()
{
	if [ $# -eq 1 ]; then
		echo "Error: $1"
		echo
	fi

	echo "Usage: touch-pad-control command \"Device Name\""
	echo
	echo "Commands:"
	echo "    enable"
	echo "    disable"
	echo "    find"

	exit $#
}

get_id_by_name()
{
	id=$(xinput --list | egrep "slave *pointer" | grep "$search_name" | sed -e 's/^.*id=//' -e 's/\s.*$//')
}

get_name_by_id()
{
	name=$(xinput --list | egrep "slave *pointer" | grep "id=$id" | sed 's/⎜ *.↳ //g' | cut -f 1 | sed 's/\s*$//g')
}

find_device()
{
	echo "Searching for: \"$search_name\""
	get_id_by_name

	if [ "$id" != "" ] && [ $id -ne 0 ]; then
		get_name_by_id
		echo "Found \"$name\" with id $id"
	else
		echo "Unable to find device matching \"$search_name\""
		exit 1
	fi
}

toggle_device()
{
	local mode=$1
	find_device
	if [ $mode -eq 1 ]; then
		xinput set-prop $id "Device Enabled" $mode
		echo "$name enabled"
	elif [ $mode -eq 0 ]; then
		xinput set-prop $id "Device Enabled" $mode
		echo "$name disabled"
	else
		echo "unknown mode"
		exit 1
	fi
}

main()
{
	local cmd="$1"
	local search_name="$2"
	local id=0
	local name=""

	if [ $cmd = "enable" ]; then
		toggle_device 1
	elif [ $cmd = "disable" ]; then
		toggle_device 0
	elif [ $cmd = "find" ]; then
		find_device
	else
		display_usage "Unknown command"
	fi
}

if [ $# -eq 2 ]; then
	main "$1" "$2"
else
	display_usage "Missing arguments"
fi
