# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="robbyrussell"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(asdf brew capistrano chucknorris compleat fzf gem git node npm nvm macos pip python rails rake ruby tmux tmuxinator web-search )

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='nvim'
else
  export EDITOR='nvim'
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias vi="nvim"
alias vim="nvim"
alias mux="tmuxinator"
alias igrep="grep -i"
alias lockscreen="pmset displaysleepnow"
alias vag="vagrant"
alias git-sh="gitsh"

alias pbcopy="xclip -selection clipboard"
alias pbpaste="xclip -selection clipboard -o"
alias open="xdg-open"

# Online Help
# unalias run-help
# autoload run-help
# HELPDIR=/usr/local/share/zsh/help

# Completions
# You may also need to force rebuild `zcompdump`:
#
#   rm -f ~/.zcompdump; compinit
#
#   Additionally, if you receive "zsh compinit: insecure directories" warnings when attempting
#   to load these completions, you may need to run this:
#
#     chmod go-w '/usr/local/share'

fpath=(/usr/local/share/zsh-completions $fpath)
fpath=($HOME/.local/share/zsh-completions $fpath)

# zsh-completions
autoload -Uz compinit
compinit

# ZSH Autosuggestions
source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh

# Load profile
source $HOME/.profile

# Make any command a REPL
repl() { while true; do printf "$(echo $@)> " && read cmd && $(echo $@) $(echo $cmd); done }

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

alias oldmgrok=$HOME/repos/oldmgrok/exe/mgrok

# export PATH="$PATH":"$HOME/.pub-cache/bin"

# Dart
# DART_BIN_PATH=$HOME/.flutter_sdk/.pub-cache/bin

#if [ -d "$DART_BIN_PATH" ]
#then
#  export PATH="$PATH":"$DART_BIN_PATH"
#fi

export PKG_CONFIG_PATH=/usr/local/opt/openssl/lib/pkgconfig

if [[ `uname` == Darwin ]]; then
    MAX_MEMORY_UNITS=KB
else
    MAX_MEMORY_UNITS=MB
fi

# On Linux, max memory is megabytes; on macOS it's in kilobytes. To get the value for %M, zsh calls getrusage(), and then uses ru_maxrss / 1024. but on Linux, ru_maxrss is in kilobytes, and on Mac it's in bytes. See man getrusage on both platforms.)

TIMEFMT='%J   %U  user %S system %P cpu %*E total'$'\n'\
'avg shared (code):         %X KB'$'\n'\
'avg unshared (data/stack): %D KB'$'\n'\
'total (sum):               %K KB'$'\n'\
'max memory:                %M '$MAX_MEMORY_UNITS''$'\n'\
'page faults from disk:     %F'$'\n'\
'other page faults:         %R'

export PATH="$PATH":"$HOME/.pub-cache/bin"

alias sysinfo="neofetch"

alias nvims="nvim -S Session.vim"
alias vims="nvims"

alias m="maths"

[ -f "/home/mario/.ghcup/env" ] && source "/home/mario/.ghcup/env" # ghcup-env
eval "$(~/.rbenv/bin/rbenv init - zsh)"
