#!/bin/sh

# systeusage -- shell scripting wizardry to output system usage

display_error() {
  echo "Error: $1."
}

display_help() {
  if [ $# -eq 1 ]; then
    display_error "$1"
  fi
  echo
  echo "Syntax: sysusage [command]"
  echo
  echo "Commands:"
  echo "  all  -- Pretty output for both cpu and ram"
  echo "  cpu  -- Show only cpu usage value"
  echo "  ram  -- Show only ram usage value"
  echo "  help -- Show this help screen"
  echo
}

cpu_usage()
{
  ps -A -o %cpu | awk '{ sum += $1 } END { printf "%04.1f", sum }'
}

ram_usage()
{
  ps -caxm -orss= | awk '{ sum += $1 } END { printf "%1.1f", sum/1048576 }'
}

ram_total()
{
  sysctl hw.memsize | awk -F ": " '{ printf "%4.1f", $2 / 1073741824 }'
}

all_usage()
{
  echo "CPU: $( cpu_usage )"
  echo "RAM: $( ram_usage )"
  echo
}

if [ "$#" -eq 0 ]; then
  all_usage
fi

if [ "$#" -eq 1 ]; then
  case $1 in
    cpu|c)
      cpu_usage
    ;;
    ram|r)
      ram_usage
    ;;
    ram_total|rt)
      ram_total
    ;;
    help|h)
      display_help
    ;;
    *)
      display_help "Unknown command"
    ;;
  esac
fi

if [ "$#" -gt 2 ]; then
  display_help
fi
